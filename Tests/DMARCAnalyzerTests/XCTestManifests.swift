#if !canImport(ObjectiveC)
import XCTest

extension CaseInsensitiveKeyTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__CaseInsensitiveKeyTests = [
        ("testDictionary", testDictionary),
        ("testDictionaryLiteralInitialization", testDictionaryLiteralInitialization),
        ("testEqualityToStrings", testEqualityToStrings),
    ]
}

extension DMARCAnalyzerTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__DMARCAnalyzerTests = [
        ("testBad", testBad),
        ("testGood", testGood),
    ]
}

extension IPV6AddressTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__IPV6AddressTests = [
        ("testAllZeroes", testAllZeroes),
        ("testAlreadyShortened", testAlreadyShortened),
        ("testBasicRepeatingZeroHextets", testBasicRepeatingZeroHextets),
        ("testMultipleRepeatingZeroHextets", testMultipleRepeatingZeroHextets),
        ("testRetainingAtLeastOneZero", testRetainingAtLeastOneZero),
        ("testSingleZeroHextet", testSingleZeroHextet),
        ("testTrailingHextets", testTrailingHextets),
    ]
}

extension ServerSpecTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__ServerSpecTests = [
        ("testMatchingIPV4", testMatchingIPV4),
        ("testMatchingIPV4Range", testMatchingIPV4Range),
        ("testMatchingIPV6", testMatchingIPV6),
    ]
}

public func __allTests() -> [XCTestCaseEntry] {
    return [
        testCase(CaseInsensitiveKeyTests.__allTests__CaseInsensitiveKeyTests),
        testCase(DMARCAnalyzerTests.__allTests__DMARCAnalyzerTests),
        testCase(IPV6AddressTests.__allTests__IPV6AddressTests),
        testCase(ServerSpecTests.__allTests__ServerSpecTests),
    ]
}
#endif
